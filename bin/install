#!/bin/bash 

# Execute les scripts d'installation
function installPkg {
	(
		local paramPattern

		for param in "$@"; do
			case "$param" in
				--pattern=*)
					paramPattern=${param#-*=} ;;
			esac
		done

		local extension=".pkg"
		debugVar --var="extension" --value="$extension"
		local pattern=${paramPattern:-$extension}
		debugVar --var="pattern" --value="$pattern"

		for installFile in $globalInstallPath/*${pattern}${extension}; do
			local fileName="${installFile##*/}"
			debugVar --var="fileName" --value="$fileName"
			getPkgResource "${fileName}" && local packageResource=$resource
			debugVar --var="packageResource" --value="$packageResource"
			logSeparator --text="<$fileName>" --color="$globalBleu$globalGras" --separator="." --size="100"
			source "$packageResource"
			debugRead --prompt="Next ??"
		done
	)
}

function installProfile {
	(
		local paramProfile

		for param in "$@"; do
			case "$param" in
				--profile=*)
					paramProfile=${param#-*=} ;;
			esac
		done

		if [ -z paramProfile ]; then
			logError --text="Parameter --profile required"
			return 1
		fi

		local profileExtension=".prf"
		debugVar --var="profileExtension" --value="$profileExtension"
		local profileName="${paramProfile}$profileExtension"
		debugVar --var="profileName" --value="$profileName"
		getPrfResource "$profileName" && local profileResource=$resource
		debugVar --var="profileResource" --value="$profileResource"

		# Installations
		if [ -e "$profileResource" ]; then
			logSeparator --text="<${profileName}>" --color="$globalRouge$globalGras" --separator="â€”" --size="150"
			for line in $(cat --squeeze-blank "$profileResource"); do
				debugVar --var="line" --value="$line"
				if echo "$line" | grep "P:" > /dev/null; then
					installProfile --profile="${line#P:}"
				else
					installPkg --pattern="$line"
				fi
			done
			logSeparator --text="Fin" --color="$globalRouge$globalGras" --size="150"
		else
			logError --text="Profile \"$profileName\" not exist"
			return 1
		fi
	)
}