#!/bin/bash

# !!! Script à exécuter sur le poste client AVANT pour utiliser le login par clé privée -----------------
#
# Génère un couple clés publique/privée (publique .pub)
#ssh-keygen -t rsa -b 2048 -C "Commentaire" (passphrase: $pwd private key)
# Copie la clé publique générée précédemment sur le serveur désiré ( NECESSITE QUE LE SERVEUR SSH DISTANT ACCEPTE UNE CONNEXION PAR MOT DE PASSE !!! )
#ssh-copy-id -i ~/.ssh/xxx.pub -p <num_port> "<UsernameServer>@<ipAddressServer>"
#
# -------------------------------------------------------------------------------------------------------

(
	# Sécurisation SSH
	sshdConfigFile="/etc/ssh/sshd_config"
	debugVar --var="sshdConfigFile" --value="$sshdConfigFile"

	sudo sed -i -e "s/#\?Port .*/Port 22/" "$sshdConfigFile"
	sudo sed -i -e "s/#\?PermitRootLogin .*/PermitRootLogin no/" "$sshdConfigFile"
	sudo sed -i -e "s/#\?PasswordAuthentication .*/PasswordAuthentication no/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?StrictModes .*/StrictModes yes/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?PermitEmptyPasswords .*/PermitEmptyPasswords no/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?RSAAuthentication .*/RSAAuthentication yes/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?PubkeyAuthentication .*/PubkeyAuthentication yes/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?UsePrivilegeSeparation .*/UsePrivilegeSeparation yes/g" "$sshdConfigFile"
	sudo sed -i -e "s/#\?LogLevel .*/LogLevel ERROR/g" "$sshdConfigFile"
)