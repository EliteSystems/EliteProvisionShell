#!/bin/bash

(
	shortcutFile="/usr/share/applications/$name.desktop"
	debugVar --var="shortcutFile" --value="$shortcutFile"
	dockitemFile="$HOME/.config/plank/dock1/launchers/$name.dockitem"
	debugVar --var="dockitemFile" --value="$dockitemFile"
	licenseFileName="License.sublime_license"
	debugVar --var="licenseFileName" --value="$licenseFileName"
	licenseFilePath="$HOME/.config/sublime-text-3/Local"
	debugVar --var="licenseFilePath" --value="$licenseFilePath"
	installedPackagesPath="$HOME/.config/sublime-text-3/Installed Packages"
	debugVar --var="packagesPath" --value="$packagesPath"
	userPackagesPath="$HOME/.config/sublime-text-3/Packages/User"
	debugVar --var="userPackagesPath" --value="$userPackagesPath"
	packageControl="Package Control.sublime-package"
	debugVar --var="packageControl" --value="$packageControl"
	userPreferenceControl="Package Control.sublime-settings"
	debugVar --var="userPreferenceControl" --value="$userPreferenceControl"
	userSettings="Preferences.sublime-settings"
	debugVar --var="userSettings" --value="$userSettings"
	userSession="Session.sublime_session"
	debugVar --var="userSession" --value="$userSession"

	# Ajout du raccourci Dock
	if [ -e "$shortcutFile" ] && [ ! -e "$dockitemFile" ]; then
		logVerboseNiv2 --text="Add plank item to $name"
		echo "[PlankItemsDockItemPreferences]" | tee --append "$dockitemFile" > /dev/null
		echo "Launcher=file://$shortcutFile" | tee --append "$dockitemFile" > /dev/null
	fi

	# Ajout de la licence
	getAssetResource "$licenseFileName" && local licenceAsset=$resource
	if [ -e "$licenceAsset" ] && [ ! -e "$licenseFilePath/$licenseFileName" ]; then
		logVerboseNiv2 --text="Add license to $name"
		if [ ! -d "$licenseFilePath" ]; then
			mkdir --parents "$licenseFilePath"
		fi
		cp -f "$licenceAsset" "$licenseFilePath/$licenseFileName"
	fi

	# Packages Control
	getAssetResource "$packageControl" && local packageControlAsset=$resource
	if [ -e "$packageControlAsset" ] && [ ! -e "$installedPackagesPath/$packageControl" ]; then
		logVerboseNiv2 --text="Add Package Control to $name"
		if [ ! -d "$installedPackagesPath" ]; then
			mkdir --parents "$installedPackagesPath"
		fi
		cp -f "$packageControlAsset" "$installedPackagesPath/$packageControl"
	fi

	# User Preferences (Control Package)
	getAssetResource "$userPreferenceControl" && local userPreferenceControlAsset=$resource
	if [ -e "$userPreferenceControlAsset" ] && [ ! -e "$userPackagesPath/$userPreferenceControl" ]; then
		logVerboseNiv2 --text="Add Package Control Preferences to $name"
		if [ ! -d "$userPackagesPath" ]; then
			mkdir --parents "$userPackagesPath"
		fi
		cp -f "$userPreferenceControlAsset" "$userPackagesPath/$userPreferenceControl"
	fi

	# User Settings
	getAssetResource "$userSettings" && local userSettingsAsset=$resource
	if [ -e "$userSettingsAsset" ] && [ ! -e "$userPackagesPath/$userSettings" ]; then
		logVerboseNiv2 --text="Add User Settings Preferences to $name"
		if [ ! -d "$userPackagesPath" ]; then
			mkdir --parents "$userPackagesPath"
		fi
		cp -f "$userSettingsAsset" "$userPackagesPath/$userSettings"
	fi

	# User Session
	getAssetResource "$userSession" && local userSessionAsset=$resource
	if [ -e "$userSessionAsset" ] && [ ! -e "$licenseFilePath/$userSession" ]; then
		logVerboseNiv2 --text="Add User Session Preferences to $name"
		if [ ! -d "$licenseFilePath" ]; then
			mkdir --parents "$licenseFilePath"
		fi
		cp -f "$userSessionAsset" "$licenseFilePath/$userSession"
	fi

)